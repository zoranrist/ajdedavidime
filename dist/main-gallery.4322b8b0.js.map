{"version":3,"sources":["js/main-gallery.js"],"names":["storeItems","document","querySelectorAll","lightBox","querySelector","lightBoxItem","images","imageList","imageCounter","forEach","image","push","src","item","addEventListener","e","console","log","target","style","backgroundImage","classList","add","indexOf","length","remove","buttons","button","preventDefault","filter","dataset","display","contains","searchBox","searchFilter","value","toLowerCase","trim","textContent","includes"],"mappings":";CACA,WAEMA,IAAAA,EAAaC,SAASC,iBAAiB,eAEvCC,EAAWF,SAASG,cAAc,uBAElCC,EAAeJ,SAASG,cAAc,kBAEtCE,EAASL,SAASC,iBAAiB,cAGnCK,EAAY,GAEZC,EAAe,EAEnBF,EAAOG,QAAQ,SAAUC,GAEvBH,EAAUI,KAAKD,EAAME,OAIvBZ,EAAWS,QAAQ,SAAUI,GAG3BA,EAAKC,iBAAiB,QAAS,SAAUC,GACvCC,QAAQC,IAAIF,EAAEG,OAAON,KAEjBF,IAAAA,EAAQK,EAAEG,OAAON,IAErBP,EAAac,MAAMC,gBAAyBV,OAAAA,OAAAA,EALF,KAO1CP,EAASkB,UAAUC,IAAI,QAEvBd,EAAeD,EAAUgB,QAAQb,OAMvBT,SAASG,cAAc,YAC7BU,iBAAiB,QAAS,aAChCN,EACmB,IACjBA,EAAeD,EAAUiB,OAAS,GAEpCnB,EAAac,MAAMC,gBAAyBb,OAAAA,OAAAA,EAAUC,GAAtD,OAGaP,SAASG,cAAc,aAC7BU,iBAAiB,QAAS,aACjCN,GACoBD,EAAUiB,SAC5BhB,EAAe,GAEjBH,EAAac,MAAMC,gBAAyBb,OAAAA,OAAAA,EAAUC,GAAtD,OAIkBP,SAASG,cAAc,mBAC7BU,iBAAiB,QAAS,WACtCX,EAASkB,UAAUI,OAAO,UA5D9B,GAgEA,WAEQC,IAAAA,EAAUzB,SAASC,iBAAiB,QACpCF,EAAaC,SAASC,iBAAiB,eAE7CwB,EAAQjB,QAAQ,SAACkB,GACfA,EAAOb,iBAAiB,QAAS,SAACC,GAChCA,EAAEa,iBACIC,IAAAA,EAASd,EAAEG,OAAOY,QAAQD,OAEhC7B,EAAWS,QAAQ,SAACI,GACH,MAAXgB,EACFhB,EAAKM,MAAMY,QAAU,QAEjBlB,EAAKQ,UAAUW,SAASH,GAC1BhB,EAAKM,MAAMY,QAAU,QAErBlB,EAAKM,MAAMY,QAAU,aAjBjC,GA0BA,WACQE,IAAAA,EAAYhC,SAASG,cAAc,gBACnCJ,EAAaC,SAASC,iBAAiB,eAE7C+B,EAAUnB,iBAAiB,QAAS,SAACC,GAC7BmB,IAAAA,EAAenB,EAAEG,OAAOiB,MAAMC,cAAcC,OAGlDrC,EAAWS,QAAQ,SAACI,GAEhBA,EAAKT,cAAc,OACnBS,EACGT,cAAc,MACdkC,YAAYF,cACZG,SAASL,GAEZrB,EAAKM,MAAMY,QAAU,QAErBlB,EAAKM,MAAMY,QAAU,WAlB7B","file":"main-gallery.4322b8b0.js","sourceRoot":"..","sourcesContent":["//Use an IIFE to avoid contanminating global namespce\n(function f() {\n  //Grab stores items from the DOM\n  let storeItems = document.querySelectorAll(\".store-item\");\n  //grab lightbox container\n  let lightBox = document.querySelector(\".lightbox-container\");\n  //grab the div with the lightbox item\n  let lightBoxItem = document.querySelector(\".lightbox-item\");\n  //grab all the images from the store items\n  let images = document.querySelectorAll(\".store-img\");\n\n  // set up an array for the items\n  let imageList = [];\n  //set up a counter to run through the list of images\n  let imageCounter = 0;\n  //use a forEach loop to get a copy of all the images and push into an array of items\n  images.forEach(function (image) {\n    //push each imageto the array of images\n    imageList.push(image.src);\n  });\n\n  //Add an a click event listener to each store item\n  storeItems.forEach(function (item) {\n    //On click, allow the model container to show\n    //Change css class from display none to display block\n    item.addEventListener(\"click\", function (e) {\n      console.log(e.target.src);\n      //grab the image of the item that was clicked\n      let image = e.target.src;\n      //change the background img property of the lightbox item\n      lightBoxItem.style.backgroundImage = `url(${image})`; // --> 'url(' + image + ')'\n      //show the modal with the selected image\n      lightBox.classList.add(\"show\");\n      //get the array index number for the image that was selected\n      imageCounter = imageList.indexOf(image);\n    });\n  });\n\n  //wire up the left and right buttons\n  //select left button from the DOM\n  let btnLeft = document.querySelector(\".btnLeft\");\n  btnLeft.addEventListener(\"click\", function () {\n    imageCounter--;\n    if (imageCounter < 0) {\n      imageCounter = imageList.length - 1;\n    }\n    lightBoxItem.style.backgroundImage = `url(${imageList[imageCounter]})`;\n  });\n  //select left button from the DOM\n  let btnRight = document.querySelector(\".btnRight\");\n  btnRight.addEventListener(\"click\", function () {\n    imageCounter++;\n    if (imageCounter >= imageList.length) {\n      imageCounter = 0;\n    }\n    lightBoxItem.style.backgroundImage = `url(${imageList[imageCounter]})`;\n  });\n\n  //wire up the modal's close button\n  let lightBoxClose = document.querySelector(\".lightbox-close\");\n  lightBoxClose.addEventListener(\"click\", function () {\n    lightBox.classList.remove(\"show\");\n  });\n})();\n\n(function () {\n  // refactor to get rid of DRY code\n  const buttons = document.querySelectorAll(\".btn\");\n  const storeItems = document.querySelectorAll(\".store-item\");\n\n  buttons.forEach((button) => {\n    button.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      const filter = e.target.dataset.filter;\n\n      storeItems.forEach((item) => {\n        if (filter === \" \") {\n          item.style.display = \"block\";\n        } else {\n          if (item.classList.contains(filter)) {\n            item.style.display = \"block\";\n          } else {\n            item.style.display = \"none\";\n          }\n        }\n      });\n    });\n  });\n})();\n\n//wire up filter search box\n(function () {\n  const searchBox = document.querySelector(\"#search-item\");\n  const storeItems = document.querySelectorAll(\".store-item\");\n\n  searchBox.addEventListener(\"keyup\", (e) => {\n    const searchFilter = e.target.value.toLowerCase().trim();\n\n    //display only items that contain filter input\n    storeItems.forEach((item) => {\n      if (\n        item.querySelector(\"h5\") &&\n        item\n          .querySelector(\"h5\")\n          .textContent.toLowerCase()\n          .includes(searchFilter)\n      ) {\n        item.style.display = \"block\";\n      } else {\n        item.style.display = \"none\";\n      }\n    });\n  });\n})();\n"]}